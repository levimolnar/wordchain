{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levi\\\\Desktop\\\\chaingamegh\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from 'react';\nimport { History } from './components/History';\nimport { WordInput } from './components/WordInput';\nimport './App.css';\nimport { socket } from './socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayerPanel = ({\n  players,\n  turnId\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playerPanel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        lineHeight: \"2em\",\n        fontSize: \".8em\"\n      },\n      children: [\"PLAYERS (\", players.length, \"):\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), players.map(playerName => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: turnId === playerName ? \"activePlayerName\" : \"playerName\",\n      children: playerName\n    }, playerName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = PlayerPanel;\nconst GameSetup = ({\n  startFunc\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"WORD CHAIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subtitle\",\n      children: \"ANIMALS EDITION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"startButton\",\n      onClick: () => startFunc(),\n      children: \"START GAME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = GameSetup;\nconst GameInProgress = ({\n  emitSubmit\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContent\",\n    children: [/*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WordInput, {\n      emitFunc: emitSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c3 = GameInProgress;\nconst GameWaiting = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContent\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n};\n_c4 = GameWaiting;\n;\nconst initGameValues = {\n  players: [],\n  turnClientId: \"\",\n  yourTurn: false,\n  history: new Set()\n};\nexport const GameContext = /*#__PURE__*/createContext(initGameValues);\nconst App = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  // const [gameStarted, setGameStarted] = useState<boolean>(false);\n\n  const [gameStatus, setGameStatus] = useState(\"setup\");\n  const [turnClientId, setTurnClientId] = useState(\"\");\n  const [yourTurn, setYourTurn] = useState(false);\n  const [history, setHistory] = useState(new Set());\n  useEffect(() => {\n    // if other client joins lobby\n    socket.on(\"playersChange\", newPlayers => {\n      setPlayers(newPlayers);\n    });\n\n    // if other client starts game\n    socket.on(\"gameStarted\", () => {\n      setGameStatus(\"started\");\n    });\n\n    // if game is ended\n    socket.on(\"gameEnded\", () => {\n      setGameStatus(\"setup\");\n    });\n\n    // if game has already started when joining\n    socket.on(\"alreadyStarted\", () => {\n      setGameStatus(\"waiting\");\n    });\n    socket.on(\"turnInfo\", (bcHistory, turnId) => {\n      setHistory(new Set(bcHistory));\n      setTurnClientId(turnId);\n      if (turnId === socket.id) {\n        setYourTurn(true);\n      }\n      ;\n\n      // console.log(\"turn\", turnId)\n    });\n  }, []);\n\n  // start game\n  const startGame = () => {\n    socket.emit(\"start\");\n    // setYourTurn(true);\n  };\n  const emitSubmit = newHistory => {\n    setHistory(new Set(newHistory));\n    setYourTurn(false);\n    socket.emit(\"submit\", newHistory);\n  };\n  const contextValue = {\n    players,\n    turnClientId,\n    yourTurn,\n    history\n  };\n  const statusSwitch = () => {\n    switch (gameStatus) {\n      case \"setup\":\n        return /*#__PURE__*/_jsxDEV(GameSetup, {\n          startFunc: startGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 16\n        }, this);\n      case \"started\":\n        return /*#__PURE__*/_jsxDEV(GameInProgress, {\n          emitSubmit: emitSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 16\n        }, this);\n      case \"waiting\":\n        return /*#__PURE__*/_jsxDEV(GameWaiting, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n      value: contextValue,\n      children: [/*#__PURE__*/_jsxDEV(PlayerPanel, {\n        players: players,\n        turnId: turnClientId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), statusSwitch()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HT8SMzLmVDr7Hjqq5UNnszuSWic=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"PlayerPanel\");\n$RefreshReg$(_c2, \"GameSetup\");\n$RefreshReg$(_c3, \"GameInProgress\");\n$RefreshReg$(_c4, \"GameWaiting\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["createContext","useEffect","useState","History","WordInput","socket","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerPanel","players","turnId","className","children","style","lineHeight","fontSize","length","fileName","_jsxFileName","lineNumber","columnNumber","map","playerName","_c","GameSetup","startFunc","onClick","_c2","GameInProgress","emitSubmit","emitFunc","_c3","GameWaiting","_c4","initGameValues","turnClientId","yourTurn","history","Set","GameContext","App","_s","setPlayers","gameStatus","setGameStatus","setTurnClientId","setYourTurn","setHistory","on","newPlayers","bcHistory","id","startGame","emit","newHistory","contextValue","statusSwitch","Provider","value","_c5","$RefreshReg$"],"sources":["C:/Users/Levi/Desktop/chaingamegh/client/src/App.tsx"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\r\nimport { History } from './components/History';\r\nimport { WordInput } from './components/WordInput';\r\n\r\nimport './App.css';\r\n\r\nimport { socket } from './socket';\r\n\r\nconst PlayerPanel = ({ players, turnId }: { players: string[], turnId: string }) => { \r\n  return (\r\n    <div className=\"playerPanel\">\r\n      <div style={{lineHeight: \"2em\", fontSize: \".8em\"}}>\r\n        PLAYERS ({players.length}):\r\n      </div>\r\n      {players.map(playerName => \r\n        <div \r\n          className={(turnId === playerName) ? \"activePlayerName\" : \"playerName\"}\r\n          key={playerName}\r\n        >\r\n          {playerName}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GameSetup = ({ startFunc }: { startFunc: Function }) => { \r\n  return (\r\n    <>\r\n      <div className=\"title\">WORD CHAIN</div>\r\n      <div className=\"subtitle\">ANIMALS EDITION</div>\r\n      <button\r\n        className=\"startButton\"\r\n        onClick={() => startFunc()}\r\n      >\r\n        START GAME\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst GameInProgress = ({ \r\n    emitSubmit,\r\n  }: { \r\n    emitSubmit: (newHistory: string[]) => void,\r\n  }) => { \r\n  \r\n  return (\r\n    <div className=\"mainContent\">\r\n      <History />\r\n      <WordInput \r\n        emitFunc={emitSubmit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GameWaiting = () => { \r\nreturn (\r\n  <div className=\"mainContent\">\r\n  </div>\r\n);\r\n};\r\n\r\n\r\ninterface GameContextType {\r\n  players: string[];\r\n  turnClientId: string;\r\n  yourTurn: boolean;\r\n  history: Set<string>;\r\n};\r\n\r\nconst initGameValues: GameContextType = {\r\n  players: [],\r\n  turnClientId: \"\",\r\n  yourTurn: false,\r\n  history: new Set(),\r\n};\r\n\r\nexport const GameContext = createContext(initGameValues);\r\n\r\nconst App = () => {\r\n\r\n  const [players, setPlayers] = useState<string[]>([]);\r\n  // const [gameStarted, setGameStarted] = useState<boolean>(false);\r\n  \r\n  const [gameStatus, setGameStatus] = useState<\"setup\" | \"started\" | \"waiting\">(\"setup\");\r\n\r\n  const [turnClientId, setTurnClientId] = useState<string>(\"\");\r\n  const [yourTurn, setYourTurn] = useState<boolean>(false);\r\n  const [history, setHistory] = useState<Set<string>>(new Set()); \r\n\r\n  useEffect(() => {\r\n    // if other client joins lobby\r\n    socket.on(\"playersChange\", newPlayers => {\r\n      setPlayers(newPlayers);\r\n    });\r\n\r\n    // if other client starts game\r\n    socket.on(\"gameStarted\", () => {\r\n      setGameStatus(\"started\");\r\n    });\r\n\r\n    // if game is ended\r\n    socket.on(\"gameEnded\", () => {\r\n      setGameStatus(\"setup\");\r\n    });\r\n\r\n    // if game has already started when joining\r\n    socket.on(\"alreadyStarted\", () => {\r\n      setGameStatus(\"waiting\");\r\n    });\r\n\r\n    socket.on(\"turnInfo\", (bcHistory, turnId) => {\r\n      setHistory(new Set(bcHistory));\r\n      setTurnClientId(turnId);\r\n      if (turnId === socket.id) {\r\n        setYourTurn(true);\r\n      };\r\n\r\n      // console.log(\"turn\", turnId)\r\n    });\r\n  }, []);\r\n\r\n  // start game\r\n  const startGame = () => { \r\n    socket.emit(\"start\");\r\n    // setYourTurn(true);\r\n  };\r\n\r\n  const emitSubmit = (newHistory: string[]) => {\r\n    setHistory(new Set(newHistory));\r\n    setYourTurn(false);\r\n\r\n    socket.emit(\"submit\", newHistory);\r\n  };\r\n\r\n  const contextValue: GameContextType = {\r\n    players,\r\n    turnClientId,\r\n    yourTurn,\r\n    history,\r\n  };\r\n\r\n  const statusSwitch = () => {\r\n    switch(gameStatus) {\r\n      case \"setup\":\r\n        return <GameSetup startFunc={startGame} />;\r\n      case \"started\":\r\n        return <GameInProgress emitSubmit={emitSubmit}/>;\r\n      case \"waiting\":\r\n        return <GameWaiting/>;\r\n      default:\r\n        return <></>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <GameContext.Provider value={contextValue}>\r\n        <PlayerPanel players={players} turnId={turnClientId}/>\r\n        {/* {\r\n          (gameStatus === \"started\") \r\n          ? <GameInProgress emitSubmit={emitSubmit}/>\r\n          : <GameSetup startFunc={startGame} />\r\n        } */}\r\n        {statusSwitch()}\r\n      </GameContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
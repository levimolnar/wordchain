{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levi\\\\Desktop\\\\chaingamegh\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useEffect, useState } from 'react';\nimport { History } from './components/History';\nimport { WordInput } from './components/WordInput';\nimport './App.css';\nimport { socket } from './socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayerPanel = ({\n  players,\n  turnId\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playerPanel\",\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      style: {\n        lineHeight: \"2em\",\n        fontSize: \".8em\"\n      },\n      children: [\"ROOM (\", players.length, \"):\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), players.map((playerName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: playerName === turnId ? \"activePlayerName\" : \"playerName\",\n      children: [playerName === turnId ? \"●\\xa0\" : \"\\xa0\\xa0\", \"PLAYER \", index + 1, playerName === socket.id ? \"\\xa0(you)\" : \"\"]\n    }, playerName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = PlayerPanel;\nconst Title = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"title\",\n    children: \"WORD CHAIN\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subtitle\",\n    children: \"ANIMALS EDITION\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n_c2 = Title;\nconst TitleLogo = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"logo\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"title\",\n    children: \"WORD CHAIN\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subtitle\",\n    children: \"ANIMALS EDITION\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 3\n}, this);\n_c3 = TitleLogo;\nconst RoomDisplay = () => {\n  _s();\n  const [roomId, setRoomId] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roomDisplay\",\n    children: roomId ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roomIdDisplay\",\n      children: roomId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roomButton\",\n      onClick: () => {\n        const randomRoomId = (+new Date() * Math.random()).toString(36).substring(0, 6);\n        setRoomId(`molnar.dev/wordchain?${randomRoomId}`);\n        socket.emit(\"createRoom\", response => {\n          console.log(response.status); // ok\n        });\n      },\n      children: \"SHARE ROOM LINK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomDisplay, \"kiWewwZpjHhmnwK2RvkIkTwMsGU=\");\n_c4 = RoomDisplay;\nconst GameSetup = ({\n  startFunc\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"50%\",\n        // backgroundColor: \"#ff000055\",\n        gap: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"startButton\",\n        onClick: () => startFunc(),\n        children: \"START GAME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoomDisplay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c5 = GameSetup;\nconst GameInProgress = ({\n  emitSubmit\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TitleLogo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent\",\n      children: [/*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WordInput, {\n        emitFunc: emitSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c6 = GameInProgress;\nconst GameWaiting = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TitleLogo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"white\"\n      },\n      children: \"Game already in progress. Stay in this lobby to join when it ends.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c7 = GameWaiting;\n;\nconst initGameValues = {\n  players: [],\n  turnClientId: \"\",\n  yourTurn: false,\n  history: new Set()\n};\nexport const GameContext = /*#__PURE__*/createContext(initGameValues);\nconst App = () => {\n  _s2();\n  const [players, setPlayers] = useState([]);\n  const [gameStatus, setGameStatus] = useState(\"setup\");\n  const [turnClientId, setTurnClientId] = useState(\"\");\n  const [yourTurn, setYourTurn] = useState(false);\n  const [history, setHistory] = useState(new Set());\n  useEffect(() => {\n    socket.on(\"playersChange\", newPlayers => setPlayers(newPlayers));\n    socket.on(\"gameStarted\", () => setGameStatus(\"started\"));\n    socket.on(\"gameEnded\", () => setGameStatus(\"setup\"));\n    socket.on(\"roomConnection\", () => setGameStatus(\"waiting\"));\n    socket.on(\"turnInfo\", (historyArr, turnId) => {\n      if (historyArr) {\n        setHistory(new Set(historyArr));\n      }\n      ;\n      setTurnClientId(turnId);\n      if (turnId === socket.id) {\n        setYourTurn(true);\n      }\n      ;\n    });\n  }, []);\n\n  // start game\n  const startGame = () => {\n    socket.emit(\"start\");\n  };\n  const emitSubmit = newHistory => {\n    setHistory(new Set(newHistory));\n    setYourTurn(false);\n    socket.emit(\"submit\", newHistory);\n  };\n  const contextValue = {\n    players,\n    turnClientId,\n    yourTurn,\n    history\n  };\n  const statusSwitch = () => {\n    switch (gameStatus) {\n      case \"setup\":\n        return /*#__PURE__*/_jsxDEV(GameSetup, {\n          startFunc: startGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 16\n        }, this);\n      case \"started\":\n        return /*#__PURE__*/_jsxDEV(GameInProgress, {\n          emitSubmit: emitSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 16\n        }, this);\n      case \"waiting\":\n        return /*#__PURE__*/_jsxDEV(GameWaiting, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n      value: contextValue,\n      children: [/*#__PURE__*/_jsxDEV(PlayerPanel, {\n        players: players,\n        turnId: turnClientId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), statusSwitch()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"HT8SMzLmVDr7Hjqq5UNnszuSWic=\");\n_c8 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"PlayerPanel\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"TitleLogo\");\n$RefreshReg$(_c4, \"RoomDisplay\");\n$RefreshReg$(_c5, \"GameSetup\");\n$RefreshReg$(_c6, \"GameInProgress\");\n$RefreshReg$(_c7, \"GameWaiting\");\n$RefreshReg$(_c8, \"App\");","map":{"version":3,"names":["createContext","useEffect","useState","History","WordInput","socket","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerPanel","players","turnId","className","children","style","lineHeight","fontSize","length","fileName","_jsxFileName","lineNumber","columnNumber","map","playerName","index","id","_c","Title","_c2","TitleLogo","_c3","RoomDisplay","_s","roomId","setRoomId","onClick","randomRoomId","Date","Math","random","toString","substring","emit","response","console","log","status","_c4","GameSetup","startFunc","display","width","gap","_c5","GameInProgress","emitSubmit","emitFunc","_c6","GameWaiting","color","_c7","initGameValues","turnClientId","yourTurn","history","Set","GameContext","App","_s2","setPlayers","gameStatus","setGameStatus","setTurnClientId","setYourTurn","setHistory","on","newPlayers","historyArr","startGame","newHistory","contextValue","statusSwitch","Provider","value","_c8","$RefreshReg$"],"sources":["C:/Users/Levi/Desktop/chaingamegh/client/src/App.tsx"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\r\nimport { History } from './components/History';\r\nimport { WordInput } from './components/WordInput';\r\n\r\nimport './App.css';\r\n\r\nimport { socket } from './socket';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nconst PlayerPanel = ({ players, turnId }: { players: string[], turnId: string }) => { \r\n  return (\r\n    <div className=\"playerPanel\">\r\n      <b style={{lineHeight: \"2em\", fontSize: \".8em\"}}>\r\n        ROOM ({players.length}):\r\n      </b>\r\n      {players.map((playerName, index)=> \r\n        <div \r\n          className={(playerName === turnId) ? \"activePlayerName\" : \"playerName\"}\r\n          key={playerName}\r\n        >\r\n          {(playerName === turnId) ? \"●\\xa0\" : \"\\xa0\\xa0\"} \r\n          PLAYER {index + 1}\r\n          {(playerName === socket.id) ? \"\\xa0(you)\" : \"\"}\r\n        </div>\r\n      )}\r\n      {/* <div style={{lineHeight: \"2em\", fontSize: \".8em\", paddingTop: \"10px\"}}>\r\n        WAITING (-):\r\n      </div> */}\r\n      {/* {players.map(playerName => \r\n        <div \r\n          className={(turnId === playerName) ? \"activePlayerName\" : \"playerName\"}\r\n          key={playerName}\r\n        >\r\n          {playerName}\r\n        </div>\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Title = () => (\r\n  <>\r\n    <div className=\"title\">WORD CHAIN</div>\r\n    <div className=\"subtitle\">ANIMALS EDITION</div>\r\n  </>\r\n);\r\n\r\nconst TitleLogo = () => (\r\n  <div className=\"logo\">\r\n    <div className=\"title\">WORD CHAIN</div>\r\n    <div className=\"subtitle\">ANIMALS EDITION</div>\r\n  </div>\r\n);\r\n\r\n\r\nconst RoomDisplay = () => {\r\n\r\n  const [roomId, setRoomId] = useState<string>(\"\"); \r\n\r\n  return (\r\n    <div className=\"roomDisplay\">\r\n      {\r\n        roomId\r\n        ? (\r\n          <div\r\n            className=\"roomIdDisplay\"\r\n          >\r\n            {roomId}\r\n          </div>\r\n        )\r\n        : (\r\n          <button\r\n            className=\"roomButton\"\r\n            onClick={() => {\r\n              const randomRoomId = (+new Date * Math.random()).toString(36).substring(0,6);\r\n              setRoomId(`molnar.dev/wordchain?${randomRoomId}`);\r\n              socket.emit(\"createRoom\", (response: any) => {\r\n                console.log(response.status); // ok\r\n              });\r\n            }}\r\n          >\r\n            SHARE ROOM LINK\r\n          </button>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nconst GameSetup = ({ startFunc }: { startFunc: Function }) => { \r\n  return (\r\n    <>\r\n      <Title />\r\n      <div style={{\r\n        display: \"flex\", \r\n        width: \"50%\", \r\n        // backgroundColor: \"#ff000055\",\r\n        gap: \"30px\",\r\n      }}>\r\n        <button\r\n          className=\"startButton\"\r\n          onClick={() => startFunc()}\r\n        >\r\n          START GAME\r\n        </button>\r\n        <RoomDisplay />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst GameInProgress = ({ emitSubmit }: { emitSubmit: (newHistory: string[]) => void }) => { \r\n  return (\r\n    <>\r\n      <TitleLogo />\r\n      <div className=\"mainContent\">\r\n        <History />\r\n        <WordInput \r\n          emitFunc={emitSubmit}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst GameWaiting = () => { \r\n  return (\r\n    <>\r\n      <TitleLogo />\r\n      <div style={{color: \"white\"}}>\r\n        Game already in progress. Stay in this lobby to join when it ends.\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\ninterface GameContextType {\r\n  players: string[];\r\n  turnClientId: string;\r\n  yourTurn: boolean;\r\n  history: Set<string>;\r\n};\r\n\r\nconst initGameValues: GameContextType = {\r\n  players: [],\r\n  turnClientId: \"\",\r\n  yourTurn: false,\r\n  history: new Set(),\r\n};\r\n\r\nexport const GameContext = createContext(initGameValues);\r\n\r\nconst App = () => {\r\n\r\n  const [players, setPlayers] = useState<string[]>([]);\r\n  const [gameStatus, setGameStatus] = useState<\"setup\" | \"started\" | \"waiting\">(\"setup\");\r\n  const [turnClientId, setTurnClientId] = useState<string>(\"\");\r\n  const [yourTurn, setYourTurn] = useState<boolean>(false);\r\n  const [history, setHistory] = useState<Set<string>>(new Set()); \r\n\r\n  useEffect(() => {\r\n    socket.on(\"playersChange\", newPlayers => setPlayers(newPlayers));\r\n    socket.on(\"gameStarted\", () => setGameStatus(\"started\"));\r\n    socket.on(\"gameEnded\", () => setGameStatus(\"setup\"));\r\n    socket.on(\"roomConnection\", () => setGameStatus(\"waiting\"));\r\n\r\n    socket.on(\"turnInfo\", (historyArr, turnId) => {\r\n\r\n      if (historyArr) { setHistory(new Set(historyArr)) };\r\n\r\n      setTurnClientId(turnId);\r\n      if (turnId === socket.id) {\r\n        setYourTurn(true);\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  // start game\r\n  const startGame = () => { socket.emit(\"start\") };\r\n\r\n  const emitSubmit = (newHistory: string[]) => {\r\n    setHistory(new Set(newHistory));\r\n    setYourTurn(false);\r\n\r\n    socket.emit(\"submit\", newHistory);\r\n  };\r\n\r\n  const contextValue: GameContextType = {\r\n    players,\r\n    turnClientId,\r\n    yourTurn,\r\n    history,\r\n  };\r\n\r\n  const statusSwitch = () => {\r\n    switch(gameStatus) {\r\n      case \"setup\":\r\n        return <GameSetup startFunc={startGame} />;\r\n      case \"started\":\r\n        return <GameInProgress emitSubmit={emitSubmit}/>;\r\n      case \"waiting\":\r\n        return <GameWaiting />;\r\n      default:\r\n        return <></>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <GameContext.Provider value={contextValue}>\r\n        <PlayerPanel players={players} turnId={turnClientId}/>\r\n        { statusSwitch() }\r\n      </GameContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
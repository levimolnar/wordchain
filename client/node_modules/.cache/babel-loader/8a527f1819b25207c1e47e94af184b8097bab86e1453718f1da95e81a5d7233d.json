{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levi\\\\Documents\\\\GithubRepositories\\\\chaingame\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { History } from './components/History';\nimport { WordInput } from './components/WordInput';\nimport './App.css';\nimport { socket } from './socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerPanel = ({\n  players\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playerPanel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        lineHeight: \"2em\",\n        fontSize: \".8em\"\n      },\n      children: [\"PLAYERS (\", players.length, \"):\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), players.map(playerName => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontStyle: \"italic\",\n        fontSize: \".8em\"\n      },\n      children: playerName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = PlayerPanel;\nconst GameSetup = ({\n  startFunc\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"startButton\",\n    onClick: () => startFunc(),\n    children: \"START GAME\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c2 = GameSetup;\nconst GameInProgress = ({\n  turnState: [turn, setTurn]\n}) => {\n  _s();\n  const [history, setHistory] = useState(new Set());\n  useEffect(() => {\n    // console.log(socket.id);\n\n    socket.on(\"turnInfo\", (bcHistory, turnId) => {\n      setHistory(new Set(bcHistory));\n      setTurnClient(turnId);\n      if (turnId === socket.id) {\n        setTurn(true);\n      }\n    });\n\n    // return () => {\n    //   socket.off(\"historyBroadcast\", (bcHistory) => {\n    //     setHistory(new Set(bcHistory));           \n    //   });\n    // };\n  }, []);\n  const emitSubmit = newHistory => {\n    socket.emit(\"submit\", newHistory);\n    setHistory(new Set(newHistory));\n    setTurn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContent\",\n    children: [/*#__PURE__*/_jsxDEV(History, {\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WordInput, {\n      history: history,\n      emitFunc: emitSubmit,\n      yourTurn: turn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(GameInProgress, \"/xm8EzyEJtGj4syOM0W+FdYctl8=\");\n_c3 = GameInProgress;\nconst App = () => {\n  _s2();\n  const [players, setPlayers] = useState([]);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [turnClient, setTurnClient] = useState(false);\n  const [yourTurn, setYourTurn] = useState(false);\n  useEffect(() => {\n    // if other client joins lobby\n    socket.on(\"playersChange\", newPlayers => {\n      setPlayers(newPlayers);\n    });\n\n    // if game has already started when joining\n    // socket.on(\"alreadyStarted\", () => {\n    //   setGameStarted(true);\n    // });\n\n    // if other client starts game\n    socket.on(\"gameStarted\", () => {\n      setGameStarted(true);\n    });\n\n    // if game is ended\n    socket.on(\"gameEnded\", () => {\n      setGameStarted(false);\n    });\n  }, []);\n\n  // start game\n  const startGame = () => {\n    socket.emit(\"start\");\n    setYourTurn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(PlayerPanel, {\n      players: players\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), gameStarted ? /*#__PURE__*/_jsxDEV(GameInProgress, {\n      turnState: [yourTurn, setYourTurn]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(GameSetup, {\n      startFunc: startGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"0nrG6t3A4JjI/nR8QVNYgP5MxNU=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"PlayerPanel\");\n$RefreshReg$(_c2, \"GameSetup\");\n$RefreshReg$(_c3, \"GameInProgress\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useEffect","useState","History","WordInput","socket","jsxDEV","_jsxDEV","PlayerPanel","players","className","children","style","lineHeight","fontSize","length","fileName","_jsxFileName","lineNumber","columnNumber","map","playerName","fontStyle","_c","GameSetup","startFunc","onClick","_c2","GameInProgress","turnState","turn","setTurn","_s","history","setHistory","Set","on","bcHistory","turnId","setTurnClient","id","emitSubmit","newHistory","emit","emitFunc","yourTurn","_c3","App","_s2","setPlayers","gameStarted","setGameStarted","turnClient","setYourTurn","newPlayers","startGame","_c4","$RefreshReg$"],"sources":["C:/Users/Levi/Documents/GithubRepositories/chaingame/client/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { History } from './components/History';\r\nimport { WordInput } from './components/WordInput';\r\n\r\nimport './App.css';\r\n\r\nimport { socket } from './socket';\r\n\r\nconst PlayerPanel = ({ players }: { players: string[] }) => { \r\n  return (\r\n    <div className=\"playerPanel\">\r\n      <div style={{lineHeight: \"2em\", fontSize: \".8em\"}}>\r\n        PLAYERS ({players.length}):\r\n      </div>\r\n      {players.map(playerName => \r\n        <div style={{fontStyle: \"italic\", fontSize: \".8em\"}}>{playerName}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GameSetup = ({ startFunc }: { startFunc: Function }) => { \r\n  return (\r\n    <button\r\n      className=\"startButton\"\r\n      onClick={() => startFunc()}\r\n    >\r\n      START GAME\r\n    </button>\r\n  );\r\n};\r\n\r\nconst GameInProgress = ({ turnState: [turn, setTurn] }: { turnState: [boolean, any] }) => { \r\n\r\n  const [history, setHistory] = useState<Set<string>>(new Set()); \r\n\r\n  useEffect(()=>{\r\n\r\n    // console.log(socket.id);\r\n\r\n    socket.on(\"turnInfo\", (bcHistory, turnId) => {\r\n      setHistory(new Set(bcHistory));\r\n      setTurnClient(turnId);\r\n      if (turnId === socket.id) {\r\n        setTurn(true);\r\n      }\r\n    });\r\n\r\n    // return () => {\r\n    //   socket.off(\"historyBroadcast\", (bcHistory) => {\r\n    //     setHistory(new Set(bcHistory));           \r\n    //   });\r\n    // };\r\n  }, []);\r\n\r\n  const emitSubmit = (newHistory: string[]) => {\r\n    socket.emit(\"submit\", newHistory);\r\n    setHistory(new Set(newHistory));\r\n    setTurn(false);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"mainContent\">\r\n      <History history={history}/>\r\n      <WordInput \r\n        history={history}\r\n        emitFunc={emitSubmit}\r\n        yourTurn={turn}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [players, setPlayers] = useState<string[]>([]);\r\n  const [gameStarted, setGameStarted] = useState<boolean>(false);\r\n  const [turnClient, setTurnClient] = useState<boolean>(false);\r\n  const [yourTurn, setYourTurn] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    // if other client joins lobby\r\n    socket.on(\"playersChange\", newPlayers => {\r\n      setPlayers(newPlayers);\r\n    });\r\n\r\n    // if game has already started when joining\r\n    // socket.on(\"alreadyStarted\", () => {\r\n    //   setGameStarted(true);\r\n    // });\r\n\r\n    // if other client starts game\r\n    socket.on(\"gameStarted\", () => {\r\n      setGameStarted(true);\r\n    });\r\n\r\n    // if game is ended\r\n    socket.on(\"gameEnded\", () => {\r\n      setGameStarted(false);\r\n    });\r\n  }, []);\r\n\r\n  // start game\r\n  const startGame = () => { \r\n    socket.emit(\"start\");\r\n    setYourTurn(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <PlayerPanel players={players}/>\r\n      {\r\n        gameStarted \r\n        ? <GameInProgress turnState={[yourTurn, setYourTurn]} />\r\n        : <GameSetup startFunc={startGame} />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
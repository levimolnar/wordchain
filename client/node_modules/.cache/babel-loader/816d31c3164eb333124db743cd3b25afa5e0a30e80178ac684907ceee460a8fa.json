{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levi\\\\Desktop\\\\chaingamegh\\\\client\\\\src\\\\context\\\\game.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nexport const GameContext = /*#__PURE__*/createContext({\n  playerState: [[], () => {}],\n  turnClientState: [\"\", () => {}],\n  yourTurnState: [false, () => {}],\n  historyState: [new Set(), () => {}]\n});\nexport const GameProvider = ({\n  children\n}) => {\n  _s();\n  // const playerState     = useState<string[]>([]);\n  // const turnClientState = useState<string>(\"\");\n  // const yourTurnState   = useState<boolean>(false);\n  // const historyState    = useState<Set<string>>(new Set()); \n\n  // const contextValue: GameContextType = {\n  //   playerState,\n  //   turnClientState,\n  //   yourTurnState,\n  //   historyState,\n  // };\n\n  const [players, setPlayers] = useState([]);\n  const [turnClientId, setTurnClientId] = useState(\"\");\n  const [yourTurn, setYourTurn] = useState(false);\n  const [history, setHistory] = useState(new Set());\n  const contextValue = {\n    playerState: [players, setPlayers],\n    turnClientState: [turnClientId, setTurnClientId],\n    yourTurnState: [yourTurn, setYourTurn],\n    historyState: [history, setHistory]\n  };\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(GameProvider, \"1tw29T+CP//AJ+H5R6Fx2i4XcaA=\");\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","GameContext","playerState","turnClientState","yourTurnState","historyState","Set","GameProvider","children","_s","players","setPlayers","turnClientId","setTurnClientId","yourTurn","setYourTurn","history","setHistory","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Levi/Desktop/chaingamegh/client/src/context/game.tsx"],"sourcesContent":["import { createContext, useState } from 'react';\n\ninterface GameContextType {\n  playerState: [string[], React.Dispatch<React.SetStateAction<string[]>>];\n  turnClientState: [string, React.Dispatch<React.SetStateAction<string>>];\n  yourTurnState: [boolean, React.Dispatch<React.SetStateAction<boolean>>];\n  historyState: [Set<string>, React.Dispatch<React.SetStateAction<Set<string>>>];\n};\n\nexport const GameContext = createContext<GameContextType>({\n  playerState: [[], () => {}],\n  turnClientState: [\"\", () => {}],\n  yourTurnState: [false, () => {}],\n  historyState: [new Set(), () => {}],\n});\n\nexport const GameProvider = ({ children }: any) => {\n  // const playerState     = useState<string[]>([]);\n  // const turnClientState = useState<string>(\"\");\n  // const yourTurnState   = useState<boolean>(false);\n  // const historyState    = useState<Set<string>>(new Set()); \n\n  // const contextValue: GameContextType = {\n  //   playerState,\n  //   turnClientState,\n  //   yourTurnState,\n  //   historyState,\n  // };\n\n  const [players, setPlayers] = useState<string[]>([]);\n  const [turnClientId, setTurnClientId] = useState<string>(\"\");\n  const [yourTurn, setYourTurn] = useState<boolean>(false);\n  const [history, setHistory] = useState<Set<string>>(new Set()); \n\n  const contextValue: GameContextType = {\n    playerState: [players, setPlayers],\n    turnClientState: [turnClientId, setTurnClientId],\n    yourTurnState: [yourTurn, setYourTurn],\n    historyState: [history, setHistory],\n  };\n\n  return (\n    <GameContext.Provider value={contextValue}>\n      {children}\n    </GameContext.Provider>\n  )\n};"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO/C;AAED,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAkB;EACxDK,WAAW,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC;EAC3BC,eAAe,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC;EAC/BC,aAAa,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;EAChCC,YAAY,EAAE,CAAC,IAAIC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;AACpC,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACjD;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAS,EAAE,CAAC;EAC5D,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAU,KAAK,CAAC;EACxD,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAc,IAAIQ,GAAG,CAAC,CAAC,CAAC;EAE9D,MAAMY,YAA6B,GAAG;IACpChB,WAAW,EAAE,CAACQ,OAAO,EAAEC,UAAU,CAAC;IAClCR,eAAe,EAAE,CAACS,YAAY,EAAEC,eAAe,CAAC;IAChDT,aAAa,EAAE,CAACU,QAAQ,EAAEC,WAAW,CAAC;IACtCV,YAAY,EAAE,CAACW,OAAO,EAAEC,UAAU;EACpC,CAAC;EAED,oBACEjB,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAV,QAAA,EACvCA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACf,EAAA,CA9BWF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levi\\\\Desktop\\\\chaingamegh\\\\client\\\\src\\\\components\\\\History.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { GameContext } from \"../context/game\";\nimport { SocketContext } from \"../context/socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HistoryItem = ({\n  word,\n  user: {\n    userId,\n    userNumber\n  }\n}) => {\n  _s();\n  const socket = useContext(SocketContext);\n  const isUser = userId === socket.id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"historyRow\",\n    style: {\n      backgroundColor: isUser ? \"#00B050\" : \"\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"historyPlayerNumber\",\n      style: {\n        backgroundColor: isUser ? \"#00B050\" : \"#333\",\n        color: isUser ? \"#000\" : \"#fff\"\n      },\n      children: [\"P\", userNumber + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"historyWord\",\n      style: {\n        backgroundColor: isUser ? \"#24d574\" : \"#444\",\n        color: isUser ? \"#000\" : \"#fff\"\n      },\n      children: word.toLowerCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(HistoryItem, \"0R2d+Tq5R59clvH3S7Q6dYnlbX0=\");\n_c = HistoryItem;\nexport const History = () => {\n  _s2();\n  const {\n    // playerState: [players, setPlayers], \n    // turnClientState: [turnClientId, setTurnClientId], \n    historyState: [history, setHistory]\n  } = useContext(GameContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"history\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        width: \"100%\",\n        flexGrow: \"1\",\n        background: \"linear-gradient(red, transparent)\"\n      },\n      children: \"...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      children: Array.from(history).map(([word, user], index) => /*#__PURE__*/_jsxDEV(CSSTransition, {\n        classNames: \"slide\",\n        timeout: {\n          enter: 1000\n        },\n        children: /*#__PURE__*/_jsxDEV(HistoryItem, {\n          word: word,\n          user: user\n        }, `history-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)\n      }, word, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s2(History, \"I1UF69xmcEkUcmd0I4zGcwpJv5E=\");\n_c2 = History;\nvar _c, _c2;\n$RefreshReg$(_c, \"HistoryItem\");\n$RefreshReg$(_c2, \"History\");","map":{"version":3,"names":["useContext","CSSTransition","TransitionGroup","GameContext","SocketContext","jsxDEV","_jsxDEV","HistoryItem","word","user","userId","userNumber","_s","socket","isUser","id","className","style","backgroundColor","children","color","fileName","_jsxFileName","lineNumber","columnNumber","toLowerCase","_c","History","_s2","historyState","history","setHistory","position","width","flexGrow","background","Array","from","map","index","classNames","timeout","enter","_c2","$RefreshReg$"],"sources":["C:/Users/Levi/Desktop/chaingamegh/client/src/components/History.tsx"],"sourcesContent":["import { useContext, useEffect, useRef, useState } from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { GameContext } from \"../context/game\";\nimport { SocketContext } from \"../context/socket\";\n\nconst HistoryItem = ({\n  word,\n  user: {userId, userNumber},\n}: {\n  word: string,\n  user: {userId: string, userNumber: number}\n}) => {\n\n  const socket = useContext(SocketContext);\n  const isUser = (userId === socket.id);\n\n  return (\n    <div className=\"historyRow\" style={{backgroundColor: isUser ? \"#00B050\": \"\"}}>\n      <div className=\"historyPlayerNumber\" style={{backgroundColor: isUser ? \"#00B050\" : \"#333\", color: isUser ? \"#000\" : \"#fff\"}}>\n        P{userNumber + 1}\n      </div>\n      <div className=\"historyWord\" style={{backgroundColor: isUser ? \"#24d574\" : \"#444\", color: isUser ? \"#000\" : \"#fff\"}}>\n        {word.toLowerCase()}\n      </div>\n    </div>\n  );\n};\n\nexport const History = () => {\n\n  const {\n    // playerState: [players, setPlayers], \n    // turnClientState: [turnClientId, setTurnClientId], \n    historyState: [history, setHistory],\n  } = useContext(GameContext);\n\n  return (\n    <div className=\"history\">\n      <div style={{position: \"absolute\", width: \"100%\", flexGrow: \"1\", background: \"linear-gradient(red, transparent)\"}}>...</div>\n      <TransitionGroup>\n        { \n          Array.from(history).map(([word, user], index) => (\n            <CSSTransition\n              key={word}\n              classNames=\"slide\"\n              timeout={{ enter: 1000 }}\n            >\n              <HistoryItem \n                key={`history-${index}`}\n                word={word}\n                user={user}\n              />\n            </CSSTransition>\n          ))\n        }\n      </TransitionGroup>\n    </div>\n  )\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
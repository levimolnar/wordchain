{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levi\\\\Desktop\\\\chaingamegh\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from 'react';\nimport { History } from './components/History';\nimport { WordInput } from './components/WordInput';\nimport './App.css';\nimport { SocketContext } from './context/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayerPanel = ({\n  players,\n  turnId\n}) => {\n  _s();\n  const socket = useContext(SocketContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playerPanel\",\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      style: {\n        lineHeight: \"2em\",\n        fontSize: \".8em\"\n      },\n      children: [\"ROOM (\", players.length, \"):\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), players.map((playerName, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: playerName === turnId ? \"activePlayerName\" : \"playerName\",\n      children: [playerName === turnId ? \"●\\xa0\" : \"\\xa0\\xa0\\xa0\", \"PLAYER \", index + 1, playerName === socket.id ? \"\\xa0(you)\" : \"\"]\n    }, playerName, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerPanel, \"0R2d+Tq5R59clvH3S7Q6dYnlbX0=\");\n_c = PlayerPanel;\nconst Title = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"title\",\n    children: \"WORD CHAIN\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subtitle\",\n    children: \"ANIMALS EDITION\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n_c2 = Title;\nconst TitleLogo = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"logo\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"title\",\n    children: \"WORD CHAIN\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"subtitle\",\n    children: \"ANIMALS EDITION\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 3\n}, this);\n_c3 = TitleLogo;\nconst RoomDisplay = () => {\n  _s2();\n  const socket = useContext(SocketContext);\n  const [roomId, setRoomId] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roomDisplay\",\n    children: roomId ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roomIdDisplay\",\n      children: [\"localhost:3000?\", roomId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roomButton\",\n      onClick: () => {\n        socket.emit(\"createRoom\", response => {\n          setRoomId(response.roomId);\n        });\n      },\n      children: \"CREATE ROOM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s2(RoomDisplay, \"0XZG7WryZuHzwMUivHDGXFpC4NA=\");\n_c4 = RoomDisplay;\nconst GameSetup = ({\n  startFunc\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"50%\",\n        // backgroundColor: \"#ff000055\",\n        gap: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"startButton\",\n        onClick: () => startFunc(),\n        children: \"START GAME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RoomDisplay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c5 = GameSetup;\nconst GameInProgress = ({\n  emitSubmit\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TitleLogo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainContent\",\n      children: [/*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(WordInput, {\n        emitFunc: emitSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c6 = GameInProgress;\nconst GameWaiting = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TitleLogo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"white\"\n      },\n      children: \"Game already in progress. Stay in this lobby to join when it ends.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c7 = GameWaiting;\n;\nconst initGameValues = {\n  players: [],\n  turnClientId: \"\",\n  yourTurn: false,\n  history: new Set()\n};\nexport const GameContext = /*#__PURE__*/createContext(initGameValues);\nconst App = () => {\n  _s3();\n  const socket = useContext(SocketContext);\n\n  // const [roomId, setRoomId] = useState<string[]>([]);\n  const [gameStatus, setGameStatus] = useState(\"setup\");\n  const [players, setPlayers] = useState([]);\n  const [history, setHistory] = useState(new Set());\n  const [turnClientId, setTurnClientId] = useState(\"\");\n  const [yourTurn, setYourTurn] = useState(false);\n  useEffect(() => {\n    // const urlParamId = parseInt(window.location.search.slice(1), 36);\n    // console.log(urlParamId.toString(36));\n\n    const urlString = window.location.search.slice(1);\n    if (urlString) {\n      socket.emit(\"joinRoom\", urlString, response => {\n        if (response.success) {\n          // if (response.status === \"setup\") { setGameStatus(\"setup\") };\n          if (response.status === \"inProgress\") {\n            setGameStatus(\"waiting\");\n            console.log(\"Game is already in progress.\");\n          }\n          ;\n        }\n        ;\n      });\n    }\n    ;\n    socket.on(\"playersChange\", newPlayers => setPlayers(newPlayers));\n    socket.on(\"gameStarted\", () => setGameStatus(\"started\"));\n    socket.on(\"gameEnded\", () => setGameStatus(\"setup\"));\n    // socket.on(\"gameInProgress\", () => setGameStatus(\"waiting\"));\n\n    socket.on(\"turnInfo\", (historyArr, turnId) => {\n      if (historyArr) {\n        setHistory(new Set(historyArr));\n      }\n      ;\n      setTurnClientId(turnId);\n      if (turnId === socket.id) {\n        setYourTurn(true);\n      }\n      ;\n    });\n  }, []);\n\n  // start game\n  const startGame = () => {\n    socket.emit(\"start\");\n  };\n  const emitSubmit = newHistory => {\n    setHistory(new Set(newHistory));\n    setYourTurn(false);\n    socket.emit(\"submit\", newHistory);\n  };\n  const contextValue = {\n    players,\n    turnClientId,\n    yourTurn,\n    history\n  };\n  const statusSwitch = () => {\n    switch (gameStatus) {\n      case \"setup\":\n        return /*#__PURE__*/_jsxDEV(GameSetup, {\n          startFunc: startGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 16\n        }, this);\n      case \"started\":\n        return /*#__PURE__*/_jsxDEV(GameInProgress, {\n          emitSubmit: emitSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 16\n        }, this);\n      case \"waiting\":\n        return /*#__PURE__*/_jsxDEV(GameWaiting, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n      value: contextValue,\n      children: [/*#__PURE__*/_jsxDEV(PlayerPanel, {\n        players: players,\n        turnId: turnClientId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), statusSwitch()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s3(App, \"KG0LGagRtjTcY8R+OcLi4wRnVN0=\");\n_c8 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"PlayerPanel\");\n$RefreshReg$(_c2, \"Title\");\n$RefreshReg$(_c3, \"TitleLogo\");\n$RefreshReg$(_c4, \"RoomDisplay\");\n$RefreshReg$(_c5, \"GameSetup\");\n$RefreshReg$(_c6, \"GameInProgress\");\n$RefreshReg$(_c7, \"GameWaiting\");\n$RefreshReg$(_c8, \"App\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","History","WordInput","SocketContext","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerPanel","players","turnId","_s","socket","className","children","style","lineHeight","fontSize","length","fileName","_jsxFileName","lineNumber","columnNumber","map","playerName","index","id","_c","Title","_c2","TitleLogo","_c3","RoomDisplay","_s2","roomId","setRoomId","onClick","emit","response","_c4","GameSetup","startFunc","display","width","gap","_c5","GameInProgress","emitSubmit","emitFunc","_c6","GameWaiting","color","_c7","initGameValues","turnClientId","yourTurn","history","Set","GameContext","App","_s3","gameStatus","setGameStatus","setPlayers","setHistory","setTurnClientId","setYourTurn","urlString","window","location","search","slice","success","status","console","log","on","newPlayers","historyArr","startGame","newHistory","contextValue","statusSwitch","Provider","value","_c8","$RefreshReg$"],"sources":["C:/Users/Levi/Desktop/chaingamegh/client/src/App.tsx"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\r\nimport { History } from './components/History';\r\nimport { WordInput } from './components/WordInput';\r\n\r\nimport './App.css';\r\nimport { SocketContext } from './context/socket';\r\n\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nconst PlayerPanel = ({ players, turnId }: { players: string[], turnId: string }) => { \r\n\r\n  const socket = useContext(SocketContext);\r\n\r\n  return (\r\n    <div className=\"playerPanel\">\r\n      <b style={{lineHeight: \"2em\", fontSize: \".8em\"}}>\r\n        ROOM ({players.length}):\r\n      </b>\r\n      {players.map((playerName, index)=> \r\n        <div \r\n          className={(playerName === turnId) ? \"activePlayerName\" : \"playerName\"}\r\n          key={playerName}\r\n        >\r\n          {(playerName === turnId) ? \"●\\xa0\" : \"\\xa0\\xa0\\xa0\"} \r\n          PLAYER {index + 1}\r\n          {(playerName === socket.id) ? \"\\xa0(you)\" : \"\"}\r\n        </div>\r\n      )}\r\n      {/* <div style={{lineHeight: \"2em\", fontSize: \".8em\", paddingTop: \"10px\"}}>\r\n        WAITING (-):\r\n      </div> */}\r\n      {/* {players.map(playerName => \r\n        <div \r\n          className={(turnId === playerName) ? \"activePlayerName\" : \"playerName\"}\r\n          key={playerName}\r\n        >\r\n          {playerName}\r\n        </div>\r\n      )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Title = () => (\r\n  <>\r\n    <div className=\"title\">WORD CHAIN</div>\r\n    <div className=\"subtitle\">ANIMALS EDITION</div>\r\n  </>\r\n);\r\n\r\nconst TitleLogo = () => (\r\n  <div className=\"logo\">\r\n    <div className=\"title\">WORD CHAIN</div>\r\n    <div className=\"subtitle\">ANIMALS EDITION</div>\r\n  </div>\r\n);\r\n\r\n\r\nconst RoomDisplay = () => {\r\n\r\n  const socket = useContext(SocketContext);\r\n\r\n  const [roomId, setRoomId] = useState<string>(\"\"); \r\n\r\n  return (\r\n    <div className=\"roomDisplay\">\r\n      {\r\n        roomId\r\n        ? (\r\n          <div\r\n            className=\"roomIdDisplay\"\r\n          >\r\n            {/* molnar.dev/wordchain?{roomId} */}\r\n            localhost:3000?{roomId}\r\n          </div>\r\n        )\r\n        : (\r\n          <button\r\n            className=\"roomButton\"\r\n            onClick={() => {\r\n              socket.emit(\"createRoom\", (response: any) => {\r\n                setRoomId(response.roomId);\r\n              });\r\n            }}\r\n          >\r\n            CREATE ROOM\r\n          </button>\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nconst GameSetup = ({ startFunc }: { startFunc: Function }) => { \r\n  return (\r\n    <>\r\n      <Title />\r\n      <div style={{\r\n        display: \"flex\", \r\n        width: \"50%\", \r\n        // backgroundColor: \"#ff000055\",\r\n        gap: \"30px\",\r\n      }}>\r\n        <button\r\n          className=\"startButton\"\r\n          onClick={() => startFunc()}\r\n        >\r\n          START GAME\r\n        </button>\r\n        <RoomDisplay />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst GameInProgress = ({ emitSubmit }: { emitSubmit: (newHistory: string[]) => void }) => { \r\n  return (\r\n    <>\r\n      <TitleLogo />\r\n      <div className=\"mainContent\">\r\n        <History />\r\n        <WordInput \r\n          emitFunc={emitSubmit}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst GameWaiting = () => { \r\n  return (\r\n    <>\r\n      <TitleLogo />\r\n      <div style={{color: \"white\"}}>\r\n        Game already in progress. Stay in this lobby to join when it ends.\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\ninterface GameContextType {\r\n  players: string[];\r\n  turnClientId: string;\r\n  yourTurn: boolean;\r\n  history: Set<string>;\r\n};\r\n\r\nconst initGameValues: GameContextType = {\r\n  players: [],\r\n  turnClientId: \"\",\r\n  yourTurn: false,\r\n  history: new Set(),\r\n};\r\n\r\nexport const GameContext = createContext(initGameValues);\r\n\r\n\r\nconst App = () => {\r\n\r\n  const socket = useContext(SocketContext);\r\n\r\n  // const [roomId, setRoomId] = useState<string[]>([]);\r\n  const [gameStatus, setGameStatus] = useState<\"setup\" | \"started\" | \"waiting\">(\"setup\");\r\n  const [players, setPlayers] = useState<string[]>([]);\r\n  const [history, setHistory] = useState<Set<string>>(new Set()); \r\n  const [turnClientId, setTurnClientId] = useState<string>(\"\");\r\n\r\n  const [yourTurn, setYourTurn] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n\r\n    // const urlParamId = parseInt(window.location.search.slice(1), 36);\r\n    // console.log(urlParamId.toString(36));\r\n\r\n    const urlString = window.location.search.slice(1);\r\n    if (urlString) { \r\n      socket.emit(\"joinRoom\", urlString, (response: any) => {\r\n        if (response.success) {\r\n          // if (response.status === \"setup\") { setGameStatus(\"setup\") };\r\n          if (response.status === \"inProgress\") { \r\n            setGameStatus(\"waiting\"); \r\n            console.log(\"Game is already in progress.\");\r\n          };\r\n        };\r\n      });\r\n    };\r\n\r\n    socket.on(\"playersChange\", newPlayers => setPlayers(newPlayers));\r\n    socket.on(\"gameStarted\", () => setGameStatus(\"started\"));\r\n    socket.on(\"gameEnded\", () => setGameStatus(\"setup\"));\r\n    // socket.on(\"gameInProgress\", () => setGameStatus(\"waiting\"));\r\n\r\n    socket.on(\"turnInfo\", (historyArr, turnId) => {\r\n\r\n      if (historyArr) { setHistory(new Set(historyArr)) };\r\n\r\n      setTurnClientId(turnId);\r\n      if (turnId === socket.id) {\r\n        setYourTurn(true);\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  // start game\r\n  const startGame = () => { socket.emit(\"start\") };\r\n\r\n  const emitSubmit = (newHistory: string[]) => {\r\n    setHistory(new Set(newHistory));\r\n    setYourTurn(false);\r\n\r\n    socket.emit(\"submit\", newHistory);\r\n  };\r\n\r\n  const contextValue: GameContextType = {\r\n    players,\r\n    turnClientId,\r\n    yourTurn,\r\n    history,\r\n  };\r\n\r\n  const statusSwitch = () => {\r\n    switch(gameStatus) {\r\n      case \"setup\":\r\n        return <GameSetup startFunc={startGame} />;\r\n      case \"started\":\r\n        return <GameInProgress emitSubmit={emitSubmit}/>;\r\n      case \"waiting\":\r\n        return <GameWaiting />;\r\n      default:\r\n        return <></>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <GameContext.Provider value={contextValue}>\r\n        <PlayerPanel players={players} turnId={turnClientId}/>\r\n        { statusSwitch() }\r\n      </GameContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
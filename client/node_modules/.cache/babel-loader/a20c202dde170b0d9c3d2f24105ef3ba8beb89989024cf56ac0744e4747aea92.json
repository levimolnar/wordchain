{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levi\\\\Desktop\\\\chaingamegh\\\\client\\\\src\\\\context\\\\game.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from 'react';\n\n// interface GameContextType {\n//   players: string[];\n//   turnClientId: string;\n//   yourTurn: boolean;\n//   history: Set<string>;\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\nexport const GameContext = /*#__PURE__*/createContext();\nexport const GameProvider = ({\n  children\n}) => {\n  _s();\n  // const [players, setPlayers] = useState<string[]>([]);\n  // const [turnClientId, setTurnClientId] = useState<string>(\"\");\n  // const [yourTurn, setYourTurn] = useState<boolean>(false);\n  // const [history, setHistory] = useState<Set<string>>(new Set()); \n\n  const playerState = useState([]);\n  const turnClientState = useState(\"\");\n  const yourTurnState = useState(false);\n  const historyState = useState(new Set());\n\n  // const contextValue: GameContextType = {\n  //   players,\n  //   turnClientId,\n  //   yourTurn,\n  //   history,\n  // };\n\n  const contextValue = {\n    playerState,\n    turnClientState,\n    yourTurnState,\n    historyState\n  };\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(GameProvider, \"YozTn4J3mzzwMkSi0wFwYwxPvjg=\");\n_c = GameProvider;\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","GameContext","GameProvider","children","_s","playerState","turnClientState","yourTurnState","historyState","Set","contextValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Levi/Desktop/chaingamegh/client/src/context/game.tsx"],"sourcesContent":["import { createContext, useState } from 'react';\n\n// interface GameContextType {\n//   players: string[];\n//   turnClientId: string;\n//   yourTurn: boolean;\n//   history: Set<string>;\n// };\n\ninterface GameContextType {\n  playerState: [string[], React.Dispatch<React.SetStateAction<string[]>>];\n  turnClientState: [string, React.Dispatch<React.SetStateAction<string>>];\n  yourTurnState: [boolean, React.Dispatch<React.SetStateAction<boolean>>];\n  historyState: [Set<string>, React.Dispatch<React.SetStateAction<string>>];\n};\n\nexport const GameContext = createContext();\n\nexport const GameProvider = ({ children }: any) => {\n\n  // const [players, setPlayers] = useState<string[]>([]);\n  // const [turnClientId, setTurnClientId] = useState<string>(\"\");\n  // const [yourTurn, setYourTurn] = useState<boolean>(false);\n  // const [history, setHistory] = useState<Set<string>>(new Set()); \n\n  const playerState     = useState<string[]>([]);\n  const turnClientState = useState<string>(\"\");\n  const yourTurnState   = useState<boolean>(false);\n  const historyState    = useState<Set<string>>(new Set()); \n\n  // const contextValue: GameContextType = {\n  //   players,\n  //   turnClientId,\n  //   yourTurn,\n  //   history,\n  // };\n\n  const contextValue: GameContextType = {\n    playerState,\n    turnClientState,\n    yourTurnState,\n    historyState,\n  };\n\n  return (\n    <GameContext.Provider value={contextValue}>\n      {children}\n    </GameContext.Provider>\n  )\n};"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;;AAE/C;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOC;AAED,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAEjD;EACA;EACA;EACA;;EAEA,MAAMC,WAAW,GAAOP,QAAQ,CAAW,EAAE,CAAC;EAC9C,MAAMQ,eAAe,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAMS,aAAa,GAAKT,QAAQ,CAAU,KAAK,CAAC;EAChD,MAAMU,YAAY,GAAMV,QAAQ,CAAc,IAAIW,GAAG,CAAC,CAAC,CAAC;;EAExD;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,YAA6B,GAAG;IACpCL,WAAW;IACXC,eAAe;IACfC,aAAa;IACbC;EACF,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACU,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAP,QAAA,EACvCA;EAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACZ,EAAA,CA/BWF,YAAY;AAAAe,EAAA,GAAZf,YAAY;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
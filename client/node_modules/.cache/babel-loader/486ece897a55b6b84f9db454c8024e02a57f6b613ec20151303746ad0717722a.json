{"ast":null,"code":"import{useContext}from\"react\";import{CSSTransition,TransitionGroup}from\"react-transition-group\";import{GameContext}from\"../context/game\";import{SocketContext}from\"../context/socket\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";const HistoryItem=_ref=>{let{word,user:{userId,userNumber}}=_ref;const socket=useContext(SocketContext);const isUser=userId===socket.id;return/*#__PURE__*/_jsxs(\"div\",{className:\"historyRow\",style:{backgroundColor:isUser?\"#00B050\":\"\"},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"historyPlayerNumber\",style:{backgroundColor:isUser?\"#00B050\":\"#333\",color:isUser?\"#000\":\"#fff\"},children:[\"P\",userNumber+1]}),/*#__PURE__*/_jsx(\"div\",{className:\"historyWord\",style:{backgroundColor:isUser?\"#24d574\":\"#444\",color:isUser?\"#000\":\"#fff\"},children:word.toLowerCase()})]});};export const History=()=>{const{// playerState: [players, setPlayers], \n// turnClientState: [turnClientId, setTurnClientId], \nhistoryState:[history,setHistory]}=useContext(GameContext);return/*#__PURE__*/_jsxs(\"div\",{className:\"history\",children:[/*#__PURE__*/_jsx(\"div\",{style:{position:\"absolute\",width:\"100%\",height:\"100%\",background:\"linear-gradient(#111 20%, transparent 66%)\"}}),/*#__PURE__*/_jsx(TransitionGroup,{children:Array.from(history).map((_ref2,index)=>{let[word,user]=_ref2;return/*#__PURE__*/_jsx(CSSTransition,{classNames:\"slide\",timeout:{enter:1000},children:/*#__PURE__*/_jsx(HistoryItem,{word:word,user:user},\"history-\".concat(index))},word);})})]});};","map":{"version":3,"names":["useContext","CSSTransition","TransitionGroup","GameContext","SocketContext","jsxs","_jsxs","jsx","_jsx","HistoryItem","_ref","word","user","userId","userNumber","socket","isUser","id","className","style","backgroundColor","children","color","toLowerCase","History","historyState","history","setHistory","position","width","height","background","Array","from","map","_ref2","index","classNames","timeout","enter","concat"],"sources":["C:/Users/Levi/Documents/GithubRepositories/chaingame/client/src/components/History.tsx"],"sourcesContent":["  import { useContext, useEffect, useRef, useState } from \"react\";\r\n  import { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n  import { GameContext } from \"../context/game\";\r\n  import { SocketContext } from \"../context/socket\";\r\n\r\n  const HistoryItem = ({\r\n    word,\r\n    user: {userId, userNumber},\r\n  }: {\r\n    word: string,\r\n    user: {userId: string, userNumber: number}\r\n  }) => {\r\n\r\n    const socket = useContext(SocketContext);\r\n    const isUser = (userId === socket.id);\r\n\r\n    return (\r\n      <div className=\"historyRow\" style={{backgroundColor: isUser ? \"#00B050\": \"\"}}>\r\n        <div className=\"historyPlayerNumber\" style={{backgroundColor: isUser ? \"#00B050\" : \"#333\", color: isUser ? \"#000\" : \"#fff\"}}>\r\n          P{userNumber + 1}\r\n        </div>\r\n        <div className=\"historyWord\" style={{backgroundColor: isUser ? \"#24d574\" : \"#444\", color: isUser ? \"#000\" : \"#fff\"}}>\r\n          {word.toLowerCase()}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export const History = () => {\r\n\r\n    const {\r\n      // playerState: [players, setPlayers], \r\n      // turnClientState: [turnClientId, setTurnClientId], \r\n      historyState: [history, setHistory],\r\n    } = useContext(GameContext);\r\n\r\n    return (\r\n      <div className=\"history\">\r\n        <div style={{position: \"absolute\", width: \"100%\", height: \"100%\", background: \"linear-gradient(#111 20%, transparent 66%)\"}}/>\r\n        <TransitionGroup>\r\n          { \r\n            Array.from(history).map(([word, user], index) => (\r\n              <CSSTransition\r\n                key={word}\r\n                classNames=\"slide\"\r\n                timeout={{ enter: 1000 }}\r\n              >\r\n                <HistoryItem \r\n                  key={`history-${index}`}\r\n                  word={word}\r\n                  user={user}\r\n                />\r\n              </CSSTransition>\r\n            ))\r\n          }\r\n        </TransitionGroup>\r\n      </div>\r\n    )\r\n  };"],"mappings":"AAAE,OAASA,UAAU,KAAqC,OAAO,CAC/D,OAASC,aAAa,CAAEC,eAAe,KAAQ,wBAAwB,CACvE,OAASC,WAAW,KAAQ,iBAAiB,CAC7C,OAASC,aAAa,KAAQ,mBAAmB,CAAC,OAAAC,IAAA,IAAAC,KAAA,gCAAAC,GAAA,IAAAC,IAAA,yBAElD,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAMd,IANe,CACnBC,IAAI,CACJC,IAAI,CAAE,CAACC,MAAM,CAAEC,UAAU,CAI3B,CAAC,CAAAJ,IAAA,CAEC,KAAM,CAAAK,MAAM,CAAGf,UAAU,CAACI,aAAa,CAAC,CACxC,KAAM,CAAAY,MAAM,CAAIH,MAAM,GAAKE,MAAM,CAACE,EAAG,CAErC,mBACEX,KAAA,QAAKY,SAAS,CAAC,YAAY,CAACC,KAAK,CAAE,CAACC,eAAe,CAAEJ,MAAM,CAAG,SAAS,CAAE,EAAE,CAAE,CAAAK,QAAA,eAC3Ef,KAAA,QAAKY,SAAS,CAAC,qBAAqB,CAACC,KAAK,CAAE,CAACC,eAAe,CAAEJ,MAAM,CAAG,SAAS,CAAG,MAAM,CAAEM,KAAK,CAAEN,MAAM,CAAG,MAAM,CAAG,MAAM,CAAE,CAAAK,QAAA,EAAC,GAC1H,CAACP,UAAU,CAAG,CAAC,EACb,CAAC,cACNN,IAAA,QAAKU,SAAS,CAAC,aAAa,CAACC,KAAK,CAAE,CAACC,eAAe,CAAEJ,MAAM,CAAG,SAAS,CAAG,MAAM,CAAEM,KAAK,CAAEN,MAAM,CAAG,MAAM,CAAG,MAAM,CAAE,CAAAK,QAAA,CACjHV,IAAI,CAACY,WAAW,CAAC,CAAC,CAChB,CAAC,EACH,CAAC,CAEV,CAAC,CAED,MAAO,MAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CAE3B,KAAM,CACJ;AACA;AACAC,YAAY,CAAE,CAACC,OAAO,CAAEC,UAAU,CACpC,CAAC,CAAG3B,UAAU,CAACG,WAAW,CAAC,CAE3B,mBACEG,KAAA,QAAKY,SAAS,CAAC,SAAS,CAAAG,QAAA,eACtBb,IAAA,QAAKW,KAAK,CAAE,CAACS,QAAQ,CAAE,UAAU,CAAEC,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,MAAM,CAAEC,UAAU,CAAE,4CAA4C,CAAE,CAAC,CAAC,cAC9HvB,IAAA,CAACN,eAAe,EAAAmB,QAAA,CAEZW,KAAK,CAACC,IAAI,CAACP,OAAO,CAAC,CAACQ,GAAG,CAAC,CAAAC,KAAA,CAAeC,KAAK,OAAnB,CAACzB,IAAI,CAAEC,IAAI,CAAC,CAAAuB,KAAA,oBACnC3B,IAAA,CAACP,aAAa,EAEZoC,UAAU,CAAC,OAAO,CAClBC,OAAO,CAAE,CAAEC,KAAK,CAAE,IAAK,CAAE,CAAAlB,QAAA,cAEzBb,IAAA,CAACC,WAAW,EAEVE,IAAI,CAAEA,IAAK,CACXC,IAAI,CAAEA,IAAK,aAAA4B,MAAA,CAFKJ,KAAK,CAGtB,CAAC,EARGzB,IASQ,CAAC,EACjB,CAAC,CAEW,CAAC,EACf,CAAC,CAEV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
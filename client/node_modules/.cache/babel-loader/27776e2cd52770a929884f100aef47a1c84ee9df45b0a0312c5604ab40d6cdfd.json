{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levi\\\\Documents\\\\GithubRepositories\\\\chaingame\\\\client\\\\src\\\\context\\\\socket.tsx\",\n  _process$env$REACT_AP,\n  _process$env$REACT_AP2;\nimport { createContext } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst address = (_process$env$REACT_AP = process.env.REACT_APP_SERVER_ADDRESS) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : \"localhost\";\nconst port = (_process$env$REACT_AP2 = process.env.REACT_APP_SERVER_PORT) !== null && _process$env$REACT_AP2 !== void 0 ? _process$env$REACT_AP2 : \"3001\";\nconst socket = io(`http://${address}:${port}`);\nconsole.log(`http://${address}:${port}`);\nexport const SocketContext = /*#__PURE__*/createContext(socket);\nexport const SocketProvider = ({\n  children\n}) => /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n  value: socket,\n  children: children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["createContext","io","jsxDEV","_jsxDEV","address","_process$env$REACT_AP","process","env","REACT_APP_SERVER_ADDRESS","port","_process$env$REACT_AP2","REACT_APP_SERVER_PORT","socket","console","log","SocketContext","SocketProvider","children","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Levi/Documents/GithubRepositories/chaingame/client/src/context/socket.tsx"],"sourcesContent":["import { createContext } from 'react';\r\nimport { io, Socket } from 'socket.io-client';\r\n\r\n\r\nconst address = process.env.REACT_APP_SERVER_ADDRESS ?? \"localhost\";\r\nconst port = process.env.REACT_APP_SERVER_PORT ?? \"3001\";\r\n\r\nconst socket = io(`http://${address}:${port}`);\r\nconsole.log(`http://${address}:${port}`);\r\n\r\nexport const SocketContext = createContext<Socket>(socket);\r\n\r\nexport const SocketProvider = ({ children }: any) => (\r\n  <SocketContext.Provider value={socket}>\r\n    {children}\r\n  </SocketContext.Provider>\r\n);"],"mappings":";;;AAAA,SAASA,aAAa,QAAQ,OAAO;AACrC,SAASC,EAAE,QAAgB,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9C,MAAMC,OAAO,IAAAC,qBAAA,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB,cAAAH,qBAAA,cAAAA,qBAAA,GAAI,WAAW;AACnE,MAAMI,IAAI,IAAAC,sBAAA,GAAGJ,OAAO,CAACC,GAAG,CAACI,qBAAqB,cAAAD,sBAAA,cAAAA,sBAAA,GAAI,MAAM;AAExD,MAAME,MAAM,GAAGX,EAAE,CAAE,UAASG,OAAQ,IAAGK,IAAK,EAAC,CAAC;AAC9CI,OAAO,CAACC,GAAG,CAAE,UAASV,OAAQ,IAAGK,IAAK,EAAC,CAAC;AAExC,OAAO,MAAMM,aAAa,gBAAGf,aAAa,CAASY,MAAM,CAAC;AAE1D,OAAO,MAAMI,cAAc,GAAGA,CAAC;EAAEC;AAAc,CAAC,kBAC9Cd,OAAA,CAACY,aAAa,CAACG,QAAQ;EAACC,KAAK,EAAEP,MAAO;EAAAK,QAAA,EACnCA;AAAQ;EAAAG,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACa,CACzB;AAACC,EAAA,GAJWR,cAAc;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
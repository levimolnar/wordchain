{"ast":null,"code":"import{useContext,useState}from\"react\";import{SocketContext}from\"../context/socket\";import{GameContext}from\"../context/game\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const url=\"https://api.gbif.org/v1/species/search\";const params=\"?highertaxon_key=1&qField=VERNACULAR&limit=250&q=\";export const WordInput=()=>{var _Array$from$at2,_Array$from$at2$;const socket=useContext(SocketContext);const{// playerState: [players, setPlayers], \nturnClientState:[turnClientId],historyState:[history]}=useContext(GameContext);const[submitDebounce,setSubmitDebounce]=useState(false);const[wordError,setWordError]=useState(\"\");const toUniqueNames=arr=>Array.from(new Set(arr.map(i=>i.vernacularName.toUpperCase())));const validateAnimal=async search=>{try{if(history.has(search)){throw Error(\"Animal name was already used.\");}const response=await fetch([url,params,search].join(\"\"));const{results}=await response.json();if(!results.length){throw Error(\"Could not find animal named \\\"\".concat(search,\"\\\".\"));}const fetchedNames=results.map(a=>a.vernacularNames);const fetchedNamesSorted=fetchedNames.sort((a,b)=>a.length-b.length);const matchingNames=fetchedNamesSorted.find(arr=>{return arr.some(_ref=>{let{vernacularName,language}=_ref;return vernacularName.toUpperCase()===search&&language===\"eng\";});});if(!matchingNames){throw Error(\"Could not find animal named \\\"\".concat(search,\"\\\".\"));}const matchingNamesEnglish=matchingNames.filter(_ref2=>{let{language}=_ref2;return language===\"eng\";});const matchingNamesUnique=toUniqueNames(matchingNamesEnglish);return matchingNamesUnique;}catch(err){if(err instanceof Error){setWordError(err.toString().split(\":\")[1]);setTimeout(()=>setWordError(\"\"),2000);};};};const submitSearch=e=>{e.preventDefault();if(!submitDebounce){setSubmitDebounce(true);setTimeout(async()=>{var _Array$from$at,_Array$from$at$;const endLetter=(_Array$from$at=Array.from(history).at(-1))===null||_Array$from$at===void 0?void 0:(_Array$from$at$=_Array$from$at[0])===null||_Array$from$at$===void 0?void 0:_Array$from$at$.at(-1);const word=endLetter?endLetter+e.target.animal.value:e.target.animal.value;console.log(word);const animalValidated=await validateAnimal(word.toUpperCase());// console.log(\"found:\", animalValidated);\nif(animalValidated){// const newHistory = [...Array.from(history), word.toUpperCase()];\n// socket.emit(\"submit\", newHistory);\nsocket.emit(\"submit\",word.toUpperCase());e.target.animal.value=\"\";};setSubmitDebounce(false);},30);};};console.log(history,history.size);return/*#__PURE__*/_jsxs(\"form\",{className:\"wordForm\",onSubmit:e=>submitSearch(e),autoComplete:\"off\",children:[turnClientId===socket.id?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"firstLetter\",children:history.size?(_Array$from$at2=Array.from(history).at(-1))===null||_Array$from$at2===void 0?void 0:(_Array$from$at2$=_Array$from$at2[0])===null||_Array$from$at2$===void 0?void 0:_Array$from$at2$.at(-1):\"\"}),/*#__PURE__*/_jsx(\"input\",{className:\"wordField\",type:\"text\",name:\"animal\",placeholder:history.size?\"...\":\"animal name (common)\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"wordDisplay\",children:/*#__PURE__*/_jsx(\"i\",{children:\"Wait for other players to finish turn ...\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"error\",children:wordError})]});};","map":{"version":3,"names":["useContext","useState","SocketContext","GameContext","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","url","params","WordInput","_Array$from$at2","_Array$from$at2$","socket","turnClientState","turnClientId","historyState","history","submitDebounce","setSubmitDebounce","wordError","setWordError","toUniqueNames","arr","Array","from","Set","map","i","vernacularName","toUpperCase","validateAnimal","search","has","Error","response","fetch","join","results","json","length","concat","fetchedNames","a","vernacularNames","fetchedNamesSorted","sort","b","matchingNames","find","some","_ref","language","matchingNamesEnglish","filter","_ref2","matchingNamesUnique","err","toString","split","setTimeout","submitSearch","e","preventDefault","_Array$from$at","_Array$from$at$","endLetter","at","word","target","animal","value","console","log","animalValidated","emit","size","className","onSubmit","autoComplete","children","id","type","name","placeholder"],"sources":["C:/Users/Levi/Desktop/chaingamegh/client/src/components/WordInput.tsx"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport { SocketContext } from \"../context/socket\";\r\nimport { GameContext } from \"../context/game\";\r\n\r\nconst url = \"https://api.gbif.org/v1/species/search\"\r\nconst params = \"?highertaxon_key=1&qField=VERNACULAR&limit=250&q=\"\r\n\r\nexport const WordInput = () => {\r\n\r\n  const socket = useContext(SocketContext);\r\n  const {\r\n    // playerState: [players, setPlayers], \r\n    turnClientState: [turnClientId], \r\n    historyState: [history],\r\n  } = useContext(GameContext);\r\n\r\n  const [submitDebounce, setSubmitDebounce] = useState<boolean>(false);\r\n  const [wordError, setWordError] = useState<string>(\"\");\r\n\r\n  const toUniqueNames = (arr: Array<{vernacularName: string, language: string}>) => Array.from(new Set(arr.map(i => i.vernacularName.toUpperCase())));\r\n\r\n  const validateAnimal = async (search: string) => {\r\n    try {\r\n\r\n      if (history.has(search)) { throw Error (\"Animal name was already used.\") }\r\n\r\n      const response = await fetch([url, params, search].join(\"\"));\r\n      const { results } = await response.json();\r\n\r\n      if (!results.length) { throw Error (`Could not find animal named \"${search}\".`) }\r\n\r\n      const fetchedNames = results.map((a: any) => a.vernacularNames);\r\n      const fetchedNamesSorted = fetchedNames.sort((a: any[], b: any[]) => a.length - b.length);\r\n      const matchingNames = fetchedNamesSorted.find((arr: Array<{vernacularName: string, language: string}>) => {\r\n        return arr.some(({ vernacularName, language }) => vernacularName.toUpperCase() === search && language === \"eng\")\r\n      });\r\n\r\n      if (!matchingNames) { throw Error (`Could not find animal named \"${search}\".`) }\r\n\r\n      const matchingNamesEnglish = matchingNames.filter(({language}: {language: string}) => language === \"eng\");\r\n      const matchingNamesUnique = toUniqueNames(matchingNamesEnglish);\r\n  \r\n      return matchingNamesUnique;\r\n\r\n    } catch(err: any) { \r\n      if (err instanceof Error) {\r\n        setWordError(err.toString().split(\":\")[1]);\r\n        setTimeout(() => setWordError(\"\"), 2000);\r\n      };\r\n    };\r\n  };\r\n\r\n  const submitSearch = (e: any) => {\r\n    e.preventDefault();\r\n\r\n    if (!submitDebounce) {\r\n      setSubmitDebounce(true);\r\n      setTimeout(async () => {\r\n\r\n        const endLetter = Array.from(history).at(-1)?.[0]?.at(-1);\r\n        const word = endLetter ? endLetter + e.target.animal.value : e.target.animal.value;\r\n\r\n        console.log(word);\r\n\r\n        const animalValidated = await validateAnimal(word.toUpperCase());\r\n        // console.log(\"found:\", animalValidated);\r\n\r\n        if (animalValidated) {\r\n          // const newHistory = [...Array.from(history), word.toUpperCase()];\r\n          // socket.emit(\"submit\", newHistory);\r\n          socket.emit(\"submit\", word.toUpperCase());\r\n          e.target.animal.value = \"\";\r\n        };\r\n\r\n        setSubmitDebounce(false);\r\n      }, 30); \r\n    };\r\n  };\r\n\r\n  console.log(history, history.size);\r\n\r\n  return (\r\n    <form \r\n      className=\"wordForm\"\r\n      onSubmit={e => submitSearch(e)}\r\n      autoComplete=\"off\"\r\n    >\r\n      {\r\n        turnClientId === socket.id\r\n        ? <>\r\n            <span className=\"firstLetter\">\r\n              { history.size ? Array.from(history).at(-1)?.[0]?.at(-1) : \"\" }\r\n            </span>\r\n            <input \r\n              className=\"wordField\"\r\n              type=\"text\" \r\n              name=\"animal\"\r\n              placeholder={history.size ? \"...\" : \"animal name (common)\"}\r\n            />\r\n          </>\r\n        : <div className=\"wordDisplay\">\r\n            <i>Wait for other players to finish turn ...</i>\r\n          </div>\r\n      }\r\n      <div className=\"error\">\r\n        {wordError}\r\n      </div>\r\n    </form>\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levi\\\\Documents\\\\GithubRepositories\\\\chaingame\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { History } from './components/History';\nimport { WordInput } from './components/WordInput';\nimport './App.css';\nimport { socket } from './socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayerPanel = ({\n  players,\n  turnId\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playerPanel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        lineHeight: \"2em\",\n        fontSize: \".8em\"\n      },\n      children: [\"PLAYERS (\", players.length, \"):\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), players.map(playerName => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: turnId === playerName ? \"activePlayerName\" : \"playerName\",\n      children: playerName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = PlayerPanel;\nconst GameSetup = ({\n  startFunc\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"NAME CHAIN ANIMALS EDITION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"startButton\",\n      onClick: () => startFunc(),\n      children: \"START GAME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = GameSetup;\nconst GameInProgress = ({\n  turnState: [turn, setTurn],\n  setTurnClientId\n}) => {\n  _s();\n  const [history, setHistory] = useState(new Set());\n  useEffect(() => {\n    // console.log(socket.id);\n\n    socket.on(\"turnInfo\", (bcHistory, turnId) => {\n      setHistory(new Set(bcHistory));\n      setTurnClientId(turnId);\n      if (turnId === socket.id) {\n        setTurn(true);\n      }\n      ;\n    });\n\n    // return () => {\n    //   socket.off(\"historyBroadcast\", (bcHistory) => {\n    //     setHistory(new Set(bcHistory));           \n    //   });\n    // };\n  }, []);\n  const emitSubmit = newHistory => {\n    socket.emit(\"submit\", newHistory);\n    setHistory(new Set(newHistory));\n    setTurn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContent\",\n    children: [/*#__PURE__*/_jsxDEV(History, {\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WordInput, {\n      history: history,\n      emitFunc: emitSubmit,\n      yourTurn: turn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(GameInProgress, \"/xm8EzyEJtGj4syOM0W+FdYctl8=\");\n_c3 = GameInProgress;\nconst App = () => {\n  _s2();\n  const [players, setPlayers] = useState([]);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [turnClientId, setTurnClientId] = useState(\"\");\n  const [yourTurn, setYourTurn] = useState(false);\n  useEffect(() => {\n    // if other client joins lobby\n    socket.on(\"playersChange\", newPlayers => {\n      setPlayers(newPlayers);\n    });\n\n    // if game has already started when joining\n    // socket.on(\"alreadyStarted\", () => {\n    //   setGameStarted(true);\n    // });\n\n    // if other client starts game\n    socket.on(\"gameStarted\", () => {\n      setGameStarted(true);\n    });\n\n    // if game is ended\n    socket.on(\"gameEnded\", () => {\n      setGameStarted(false);\n    });\n  }, []);\n\n  // start game\n  const startGame = () => {\n    socket.emit(\"start\");\n    setYourTurn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(PlayerPanel, {\n      players: players,\n      turnId: turnClientId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), gameStarted ? /*#__PURE__*/_jsxDEV(GameInProgress, {\n      turnState: [yourTurn, setYourTurn],\n      setTurnClientId: setTurnClientId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(GameSetup, {\n      startFunc: startGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"GDDzBuYjVY8DxIfYUZKdQ3Bjzho=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"PlayerPanel\");\n$RefreshReg$(_c2, \"GameSetup\");\n$RefreshReg$(_c3, \"GameInProgress\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useEffect","useState","History","WordInput","socket","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerPanel","players","turnId","className","children","style","lineHeight","fontSize","length","fileName","_jsxFileName","lineNumber","columnNumber","map","playerName","_c","GameSetup","startFunc","onClick","_c2","GameInProgress","turnState","turn","setTurn","setTurnClientId","_s","history","setHistory","Set","on","bcHistory","id","emitSubmit","newHistory","emit","emitFunc","yourTurn","_c3","App","_s2","setPlayers","gameStarted","setGameStarted","turnClientId","setYourTurn","newPlayers","startGame","_c4","$RefreshReg$"],"sources":["C:/Users/Levi/Documents/GithubRepositories/chaingame/client/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { History } from './components/History';\r\nimport { WordInput } from './components/WordInput';\r\n\r\nimport './App.css';\r\n\r\nimport { socket } from './socket';\r\n\r\nconst PlayerPanel = ({ players, turnId }: { players: string[], turnId: string }) => { \r\n  return (\r\n    <div className=\"playerPanel\">\r\n      <div style={{lineHeight: \"2em\", fontSize: \".8em\"}}>\r\n        PLAYERS ({players.length}):\r\n      </div>\r\n      {players.map(playerName => \r\n        <div \r\n          className={(turnId === playerName) ? \"activePlayerName\" : \"playerName\"}\r\n        >\r\n          {playerName}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GameSetup = ({ startFunc }: { startFunc: Function }) => { \r\n  return (\r\n    <>\r\n      <div className=\"title\">NAME CHAIN ANIMALS EDITION</div>\r\n      <button\r\n        className=\"startButton\"\r\n        onClick={() => startFunc()}\r\n      >\r\n        START GAME\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst GameInProgress = ({ \r\n    turnState: [turn, setTurn],\r\n    setTurnClientId,\r\n  }: { \r\n    turnState: [boolean, any],\r\n    setTurnClientId: any,\r\n  }) => { \r\n\r\n  const [history, setHistory] = useState<Set<string>>(new Set()); \r\n\r\n  useEffect(()=>{\r\n\r\n    // console.log(socket.id);\r\n\r\n    socket.on(\"turnInfo\", (bcHistory, turnId) => {\r\n      setHistory(new Set(bcHistory));\r\n      setTurnClientId(turnId);\r\n      if (turnId === socket.id) {\r\n        setTurn(true);\r\n      };\r\n    });\r\n\r\n    // return () => {\r\n    //   socket.off(\"historyBroadcast\", (bcHistory) => {\r\n    //     setHistory(new Set(bcHistory));           \r\n    //   });\r\n    // };\r\n  }, []);\r\n\r\n  const emitSubmit = (newHistory: string[]) => {\r\n    socket.emit(\"submit\", newHistory);\r\n    setHistory(new Set(newHistory));\r\n    setTurn(false);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"mainContent\">\r\n      <History history={history}/>\r\n      <WordInput \r\n        history={history}\r\n        emitFunc={emitSubmit}\r\n        yourTurn={turn}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nconst App = () => {\r\n\r\n  const [players, setPlayers] = useState<string[]>([]);\r\n  const [gameStarted, setGameStarted] = useState<boolean>(false);\r\n  const [turnClientId, setTurnClientId] = useState<string>(\"\");\r\n  const [yourTurn, setYourTurn] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    // if other client joins lobby\r\n    socket.on(\"playersChange\", newPlayers => {\r\n      setPlayers(newPlayers);\r\n    });\r\n\r\n    // if game has already started when joining\r\n    // socket.on(\"alreadyStarted\", () => {\r\n    //   setGameStarted(true);\r\n    // });\r\n\r\n    // if other client starts game\r\n    socket.on(\"gameStarted\", () => {\r\n      setGameStarted(true);\r\n    });\r\n\r\n    // if game is ended\r\n    socket.on(\"gameEnded\", () => {\r\n      setGameStarted(false);\r\n    });\r\n  }, []);\r\n\r\n  // start game\r\n  const startGame = () => { \r\n    socket.emit(\"start\");\r\n    setYourTurn(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <PlayerPanel players={players} turnId={turnClientId}/>\r\n      {\r\n        gameStarted \r\n        ? <GameInProgress turnState={[yourTurn, setYourTurn]} setTurnClientId={setTurnClientId}/>\r\n        : <GameSetup startFunc={startGame} />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
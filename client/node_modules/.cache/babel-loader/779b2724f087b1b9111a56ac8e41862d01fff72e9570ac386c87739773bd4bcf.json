{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levi\\\\Desktop\\\\chaingamegh\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from 'react';\nimport { History } from './components/History';\nimport { WordInput } from './components/WordInput';\nimport './App.css';\nimport { socket } from './socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayerPanel = ({\n  players,\n  turnId\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"playerPanel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        lineHeight: \"2em\",\n        fontSize: \".8em\"\n      },\n      children: [\"PLAYERS (\", players.length, \"):\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), players.map(playerName => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: turnId === playerName ? \"activePlayerName\" : \"playerName\",\n      children: playerName\n    }, playerName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = PlayerPanel;\nconst GameSetup = ({\n  startFunc\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"NAME CHAIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subtitle\",\n      children: \"ANIMALS EDITION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"startButton\",\n      onClick: () => startFunc(),\n      children: \"START GAME\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = GameSetup;\nconst GameInProgress = ({\n  emitSubmit\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContent\",\n    children: [/*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WordInput, {\n      emitFunc: emitSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c3 = GameInProgress;\n;\nconst initGameValues = {\n  players: [],\n  turnClientId: \"\"\n};\nconst GameContext = /*#__PURE__*/createContext(initGameValues);\nconst App = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [turnClientId, setTurnClientId] = useState(\"\");\n  const [yourTurn, setYourTurn] = useState(false);\n  const [history, setHistory] = useState(new Set());\n  useEffect(() => {\n    // if other client joins lobby\n    socket.on(\"playersChange\", newPlayers => {\n      setPlayers(newPlayers);\n    });\n\n    // if game has already started when joining\n    // socket.on(\"alreadyStarted\", () => {\n    //   setGameStarted(true);\n    // });\n\n    // if other client starts game\n    socket.on(\"gameStarted\", () => {\n      setGameStarted(true);\n    });\n\n    // if game is ended\n    socket.on(\"gameEnded\", () => {\n      setGameStarted(false);\n    });\n    socket.on(\"turnInfo\", (bcHistory, turnId) => {\n      setHistory(new Set(bcHistory));\n      setTurnClientId(turnId);\n      if (turnId === socket.id) {\n        setYourTurn(true);\n      }\n      ;\n\n      // console.log(\"turn\", turnId)\n    });\n  }, []);\n\n  // start game\n  const startGame = () => {\n    socket.emit(\"start\");\n    setYourTurn(true);\n  };\n  const emitSubmit = newHistory => {\n    socket.emit(\"submit\", newHistory);\n    setHistory(new Set(newHistory));\n    setYourTurn(false);\n  };\n  const contextValue = {\n    players,\n    turnClientId\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n      value: contextValue,\n      children: [/*#__PURE__*/_jsxDEV(PlayerPanel, {\n        players: players,\n        turnId: turnClientId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), gameStarted ? /*#__PURE__*/_jsxDEV(GameInProgress, {\n        emitSubmit: emitSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(GameSetup, {\n        startFunc: startGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"74d2XirVGbDyCsTLSRSkdWCUBV4=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"PlayerPanel\");\n$RefreshReg$(_c2, \"GameSetup\");\n$RefreshReg$(_c3, \"GameInProgress\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["createContext","useEffect","useState","History","WordInput","socket","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayerPanel","players","turnId","className","children","style","lineHeight","fontSize","length","fileName","_jsxFileName","lineNumber","columnNumber","map","playerName","_c","GameSetup","startFunc","onClick","_c2","GameInProgress","emitSubmit","emitFunc","_c3","initGameValues","turnClientId","GameContext","App","_s","setPlayers","gameStarted","setGameStarted","setTurnClientId","yourTurn","setYourTurn","history","setHistory","Set","on","newPlayers","bcHistory","id","startGame","emit","newHistory","contextValue","Provider","value","_c4","$RefreshReg$"],"sources":["C:/Users/Levi/Desktop/chaingamegh/client/src/App.tsx"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\r\nimport { History } from './components/History';\r\nimport { WordInput } from './components/WordInput';\r\n\r\nimport './App.css';\r\n\r\nimport { socket } from './socket';\r\n\r\nconst PlayerPanel = ({ players, turnId }: { players: string[], turnId: string }) => { \r\n  return (\r\n    <div className=\"playerPanel\">\r\n      <div style={{lineHeight: \"2em\", fontSize: \".8em\"}}>\r\n        PLAYERS ({players.length}):\r\n      </div>\r\n      {players.map(playerName => \r\n        <div \r\n          className={(turnId === playerName) ? \"activePlayerName\" : \"playerName\"}\r\n          key={playerName}\r\n        >\r\n          {playerName}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst GameSetup = ({ startFunc }: { startFunc: Function }) => { \r\n  return (\r\n    <>\r\n      <div className=\"title\">NAME CHAIN</div>\r\n      <div className=\"subtitle\">ANIMALS EDITION</div>\r\n      <button\r\n        className=\"startButton\"\r\n        onClick={() => startFunc()}\r\n      >\r\n        START GAME\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst GameInProgress = ({ \r\n    emitSubmit,\r\n  }: { \r\n    emitSubmit: (newHistory: string[]) => void,\r\n  }) => { \r\n  \r\n  return (\r\n    <div className=\"mainContent\">\r\n      <History />\r\n      <WordInput \r\n        emitFunc={emitSubmit}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface GameContextType {\r\n  players: string[];\r\n  turnClientId: string;\r\n};\r\n\r\nconst initGameValues: GameContextType = {\r\n  players: [],\r\n  turnClientId: \"\",\r\n};\r\n\r\nconst GameContext = createContext(initGameValues);\r\n\r\nconst App = () => {\r\n\r\n  const [players, setPlayers] = useState<string[]>([]);\r\n  const [gameStarted, setGameStarted] = useState<boolean>(false);\r\n  const [turnClientId, setTurnClientId] = useState<string>(\"\");\r\n  const [yourTurn, setYourTurn] = useState<boolean>(false);\r\n  const [history, setHistory] = useState<Set<string>>(new Set()); \r\n\r\n  useEffect(() => {\r\n    // if other client joins lobby\r\n    socket.on(\"playersChange\", newPlayers => {\r\n      setPlayers(newPlayers);\r\n    });\r\n\r\n    // if game has already started when joining\r\n    // socket.on(\"alreadyStarted\", () => {\r\n    //   setGameStarted(true);\r\n    // });\r\n\r\n    // if other client starts game\r\n    socket.on(\"gameStarted\", () => {\r\n      setGameStarted(true);\r\n    });\r\n\r\n    // if game is ended\r\n    socket.on(\"gameEnded\", () => {\r\n      setGameStarted(false);\r\n    });\r\n\r\n    socket.on(\"turnInfo\", (bcHistory, turnId) => {\r\n      setHistory(new Set(bcHistory));\r\n      setTurnClientId(turnId);\r\n      if (turnId === socket.id) {\r\n        setYourTurn(true);\r\n      };\r\n\r\n      // console.log(\"turn\", turnId)\r\n    });\r\n  }, []);\r\n\r\n  // start game\r\n  const startGame = () => { \r\n    socket.emit(\"start\");\r\n    setYourTurn(true);\r\n  };\r\n\r\n  const emitSubmit = (newHistory: string[]) => {\r\n    socket.emit(\"submit\", newHistory);\r\n    setHistory(new Set(newHistory));\r\n    setYourTurn(false);\r\n  };\r\n\r\n  const contextValue: GameContextType = {\r\n    players, \r\n    turnClientId,\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <GameContext.Provider value={contextValue}>\r\n        <PlayerPanel players={players} turnId={turnClientId}/>\r\n        {\r\n          gameStarted \r\n          ? <GameInProgress emitSubmit={emitSubmit}/>\r\n          : <GameSetup startFunc={startGame} />\r\n        }\r\n      </GameContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
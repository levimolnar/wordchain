{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Levi\\\\Desktop\\\\chaingame\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { History } from './components/History';\nimport { WordInput } from './components/WordInput';\nimport './App.css';\nimport { socket } from './socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameSetup = ({\n  startFunc\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"startButton\",\n    onClick: () => startFunc(),\n    children: \"START GAME\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = GameSetup;\nconst GameInProgress = ({\n  turn\n}) => {\n  _s();\n  const [history, setHistory] = useState(new Set());\n  useEffect(() => {\n    // console.log(socket.id);\n\n    socket.on(\"turnInfo\", (bcHistory, playerWithTurn) => {\n      setHistory(new Set(bcHistory));\n      console.log(socket.id, playerWithTurn);\n    });\n\n    // return () => {\n    //   socket.off(\"historyBroadcast\", (bcHistory) => {\n    //     setHistory(new Set(bcHistory));           \n    //   });\n    // };\n  }, []);\n  const emitSubmit = newHistory => {\n    socket.emit(\"submit\", newHistory);\n    setHistory(new Set(newHistory));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mainContent\",\n    children: [/*#__PURE__*/_jsxDEV(History, {\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WordInput, {\n      history: history,\n      emitFunc: emitSubmit,\n      yourTurn: turn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(GameInProgress, \"/xm8EzyEJtGj4syOM0W+FdYctl8=\");\n_c2 = GameInProgress;\nconst App = () => {\n  _s2();\n  const [gameStarted, setGameStarted] = useState(false);\n  const [yourTurn, setYourTurn] = useState(false);\n\n  // if this client starts game\n  const startGame = () => {\n    socket.emit(\"start\");\n    setGameStarted(true);\n    setYourTurn(true);\n  };\n\n  // if other client starts game\n  useEffect(() => {\n    socket.on(\"gameStarted\", () => {\n      setGameStarted(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: gameStarted ? /*#__PURE__*/_jsxDEV(GameInProgress, {\n      turn: yourTurn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(GameSetup, {\n      startFunc: startGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s2(App, \"QpMn7rX2L0ag6MsUr03POw39J4k=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GameSetup\");\n$RefreshReg$(_c2, \"GameInProgress\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useEffect","useState","History","WordInput","socket","jsxDEV","_jsxDEV","GameSetup","startFunc","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","GameInProgress","turn","_s","history","setHistory","Set","on","bcHistory","playerWithTurn","console","log","id","emitSubmit","newHistory","emit","emitFunc","yourTurn","_c2","App","_s2","gameStarted","setGameStarted","setYourTurn","startGame","_c3","$RefreshReg$"],"sources":["C:/Users/Levi/Desktop/chaingame/client/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { History } from './components/History';\nimport { WordInput } from './components/WordInput';\n\nimport './App.css';\n\nimport { socket } from './socket';\n\nconst GameSetup = ({startFunc}: {startFunc: Function}) => { \n  return (\n    <button\n      className='startButton'\n      onClick={() => startFunc()}\n    >\n      START GAME\n    </button>\n  );\n};\n\nconst GameInProgress = ({turn}: {turn: boolean}) => { \n\n  const [history, setHistory] = useState<Set<string>>(new Set());\n\n  useEffect(()=>{\n\n    // console.log(socket.id);\n\n    socket.on(\"turnInfo\", (bcHistory, playerWithTurn) => {\n      setHistory(new Set(bcHistory));\n\n      console.log(socket.id, playerWithTurn);\n    });\n\n    // return () => {\n    //   socket.off(\"historyBroadcast\", (bcHistory) => {\n    //     setHistory(new Set(bcHistory));           \n    //   });\n    // };\n  }, []);\n\n  const emitSubmit = (newHistory: string[]) => {\n    socket.emit(\"submit\", newHistory);\n    setHistory(new Set(newHistory));\n  };\n  \n  return (\n    <div className=\"mainContent\">\n      <History history={history}/>\n      <WordInput \n        history={history}\n        emitFunc={emitSubmit}\n        yourTurn={turn}\n      />\n    </div>\n  );\n};\n\nconst App = () => {\n\n  const [gameStarted, setGameStarted] = useState<boolean>(false);\n  const [yourTurn, setYourTurn] = useState<boolean>(false);\n\n  // if this client starts game\n  const startGame = () => { \n    socket.emit(\"start\");\n    setGameStarted(true);\n    setYourTurn(true);\n  };\n\n  // if other client starts game\n  useEffect(() => {\n    socket.on(\"gameStarted\", () => {\n      setGameStarted(true);\n    });\n  }, []);\n\n  return (\n    <div className=\"app\">\n      {\n        gameStarted\n        ? <GameInProgress turn={yourTurn} />\n        : <GameSetup startFunc={startGame} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}